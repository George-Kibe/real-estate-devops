services:
  backend:
    container_name: backend
    # image: georgekibe/django_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/static:/static
      - ./backend:/backend
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    networks:
      - realestatenetwork
    depends_on:
      - database
      - mongo
    restart: on-failure
    entrypoint: ["sh", "-c", "python manage.py makemigrations && python manage.py migrate && gunicorn project.wsgi:application --bind 0.0.0.0:8000"]

  
  frontend:
    container_name: frontend
    # image: georgekibe/next_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/frontend
    env_file:
      - ./frontend/.env
    ports:
      - "3000:3000"
    networks:
      - realestatenetwork
    depends_on: 
      - mongo
      - backend
    restart: on-failure

  # selenium:
  #   environment:
  #     - VNC_NO_PASSWORD=1
  #   image: selenium/standalone-chrome:117.0
  #   ports:
  #     - 7900:7900
  #   networks:
  #     - realestatenetwork
  #   restart: on-failure
  mongo:
    image: mongo:8
    container_name: mongodb
    ports:
      - "127.0.0.1:27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - realestatenetwork
    restart: on-failure
    volumes:
      - mongo-data:/data/db
  database:
    image: postgres:17.5-alpine
    volumes:
      - dev-db-data:/data/postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB_NAME}
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/data/postgres
    networks:
      - realestatenetwork
    restart: on-failure

  nginx: 
    build: ./frontend/nginx
    volumes:
     - static:/static
     - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443" 
    depends_on:
      - frontend
    networks:
      - realestatenetwork
    restart: on-failure

volumes:
  static:
  mongo-data:
  dev-db-data:
  
networks:
  realestatenetwork:
    driver: bridge